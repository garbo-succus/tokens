name: Deploy branch

env:
      STORYBOOK_URL: ""

on:
  push:
    branches-ignore:
      - "main"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linter
        run: pnpm run lint

      - name: Run tests
        run: pnpm run test

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        shell: bash
        env:
          VITE_BUILD_DATE: ${{ github.event.repository.updated_at }}
          VITE_GITHUB_SHA: ${{ github.sha }}
          VITE_GITHUB_BRANCH: ${{ github.ref_name }}
          NO_COLOR: 1 # Don't include ANSI color codes in the build output
        run: |
          echo "# Build Output" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          pnpm run build-storybook 2>&1 | tee -a $GITHUB_STEP_SUMMARY

      - name: Publish to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          command: pages deploy storybook-static --project-name=probabilitytokenstest --commit-dirty=true
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Extract deployment URL
        run: |
          echo "🔍 Extracting URL from step summary..."
          cat "$GITHUB_STEP_SUMMARY"

          URL=$(grep -oE 'https?://[^ ]+\.pages\.dev' "$GITHUB_STEP_SUMMARY" | tail -n1)
          echo "✅ Found URL: $URL"
          echo "STORYBOOK_URL=$URL" >> $GITHUB_ENV

      - name: Comment on commit
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COMMIT_SHA=${{ github.sha }}
          COMMENT="Storybook Build Succeeded! $STORYBOOK_URL"
          curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
               -H "Content-Type: application/json" \
               -X POST \
               -d "{\"body\": \"$COMMENT\"}" \
               "https://api.github.com/repos/${{ github.repository }}/commits/$COMMIT_SHA/comments"
