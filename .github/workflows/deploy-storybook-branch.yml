name: Deploy branch

env:
      STORYBOOK_URL: ""

on: pull_request

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        shell: bash
        env:
          VITE_BUILD_DATE: ${{ github.event.repository.updated_at }}
          VITE_GITHUB_SHA: ${{ github.sha }}
          VITE_GITHUB_BRANCH: ${{ github.ref_name }}
          NO_COLOR: 1 # Don't include ANSI color codes in the build output
        run: |
          echo "# Build Output" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          pnpm run build-storybook 2>&1 | tee -a $GITHUB_STEP_SUMMARY

      - name: Publish to CloudFlare Pages
        id: deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          OUTPUT=$(npx wrangler pages deploy storybook-static \
            --project-name=probability-tokens \
            --commit-dirty=true)

          echo "$OUTPUT"
          echo "$OUTPUT" > wrangler-output.txt

      - name: Extract build URL
        id: extract-url
        run: |
          echo "Extracting URLs from wrangler-output.txt..."
          cat wrangler-output.txt

          # Get the first URL in the output
          URL=$(grep -oE 'https?://[^ ]+' wrangler-output.txt | head -n1)
          echo "Found URL: $URL"

          echo "STORYBOOK_URL=$URL" >> $GITHUB_ENV

      - name: Comment on PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          COMMENT="Preview Storybook build: \$STORYBOOK_URL\"
          curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
               -H "Content-Type: application/json" \
               -X POST \
               -d "{\"body\": \"$COMMENT\"}" \
               "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments"
